name: Release master on semantic version change
on:
  push:
    branches:
      - master

env:
  GITHUB_PERSONAL_ACCESS_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  release_master:
    name: Release master
    permissions:
      checks: write
      contents: write
      packages: write

    runs-on:
      - ubuntu-latest

    steps:

      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-java@v3
        with:
          java-version: "21"
          distribution: temurin
          cache: gradle

      - uses: gradle/actions/setup-gradle@v3

      - uses: actions/setup-node@v3
        with:
          node-version: "lts/*"

      - run: ./gradlew test

      - uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          comment_mode: off
          files: ./build/test-results/test/*.xml

      - run: npm install

      - run: npm audit signatures

      - run: npx semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - run: ./gradlew -x test -Pversion=0.0.1-SNAPSHOT publish
        env:
          GITHUB_PERSONAL_ACCESS_TOKEN: ${{ secrets.PACKAGES_ACCESS_TOKEN }}

#      - run: |
#          ./gradlew -x test -Pversion=${{ steps.semantic_version.outputs.new_version }} build \
#            && npm run build
#        if: ${{ steps.semantic_version.outputs.new_version || false }}
#
#      - uses: softprops/action-gh-release@v1
#        if: ${{ steps.semantic_version.outputs.new_version || false }}
#        with:
#          generate_release_notes: ${{ !startsWith(steps.semantic_version.outputs.release_type, 'pre') }}
#          name: v${{ steps.semantic_version.outputs.new_version }}
#          prerelease: ${{ startsWith(steps.semantic_version.outputs.release_type, 'pre') }}
#          tag_name: v_${{ steps.semantic_version.outputs.new_version }}
#          token: ${{ secrets.GITHUB_TOKEN }}
#          files: |
#            ./build/libs/demo-api-${{ steps.semantic_version.outputs.new_version }}.war
